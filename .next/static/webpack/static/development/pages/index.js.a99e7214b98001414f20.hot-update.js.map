{"version":3,"file":"static/webpack/static/development/pages/index.js.a99e7214b98001414f20.hot-update.js","sources":["webpack:///./components/Prices.js"],"sourcesContent":["import React, { Component, Fragment } from 'react'\n\nexport default class Prices extends Component {\n  state = {\n    currency: 'USD'\n  }\n\n  handleChange = () => {\n    const {name, value} = e.target\n  }\n\n  render() {\n    const key = this.props.bpi\n    let list = ''\n    if (this.state.currency === 'USD') {\n      list = <li className=\"list-group-item\">\n        Bitcoin rate for {key.USD.description}: <span className=\"badge badge-primary\">{key.USD.code}</span> <strong>{key.USD.rate}</strong>\n      </li>\n    } else if(this.state.currency === 'EUR') {\n      list = <li className=\"list-group-item\">\n        Bitcoin rate for {key.EUR.description}: <span className=\"badge badge-primary\">{key.EUR.code}</span> <strong>{key.EUR.rate}</strong>\n      </li>\n    } else if(this.state.currency === 'GBP') {\n      list = <li className=\"list-group-item\">\n        Bitcoin rate for {key.GBP.description}: <span className=\"badge badge-primary\">{key.GBP.code}</span> <strong>{key.GBP.rate}</strong>\n      </li>\n    }\n    return (\n      <Fragment>\n        <ul className=\"list-group\">\n          {list}\n        </ul>\n        <select\n          name=\"currency\"\n          className=\"form-control\"\n          onChange={this.handleChange}\n        >\n          <option></option>\n          <option></option>\n          <option></option>\n        </select>\n      </Fragment>\n    )\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;AACA;AAGA;AAAA;AAAA;AAAA;AAEA;AACA;;;;;;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAzCA;AACA;;;;;A","sourceRoot":""}